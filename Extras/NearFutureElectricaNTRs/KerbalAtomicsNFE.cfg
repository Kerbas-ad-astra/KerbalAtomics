// MM Config to set fancy nuclear engines if NFE is around
@PART[ntr-gc-25-1]:NEEDS[NearFutureElectrical]
{
	@mass -= 1.76
	!MODULE[ModuleGenerator] {}
	MODULE
	{
		name = FissionReactor
		StartActionName = Start Reactor
		StopActionName = Deactivate Reactor
		// Show or hide the staging icon
		
		UseStagingIcon = true
		// Force part activate on load
		UseForcedActivation = false

		UseSpecializationBonus = false
		AutoShutdown = true
		DefaultShutoffTemp = 0.90

		// Heat animation, plays when above nominal temp
		// OverheatAnimation = Reactor_1MW_Heat

		// Heat to generate (kW *50)
		HeatGeneration = 2250000
		
		// Above this temp more power output but risky
		NominalTemperature = 6000
		// Above this temp, reactor takes damage
		CriticalTemperature = 7000
		
		MaximumTemperature = 8000

		// Amount of damage taken by core when over critical temp
		// %/s/K, so with value 0.001, at 200 K over CriticalTemp, reactor takes 0.2% damage/s
		CoreDamageRate = 0.01

		// Base lifetime calculations off this resource
		FuelName = EnrichedUranium

		// Heating
		GeneratesHeat = false
		TemperatureModifier
		{
			key = 0 0
		}				
		//250000		

		INPUT_RESOURCE
		{
			ResourceName = EnrichedUranium
			Ratio = 0.002
			FlowMode = NO_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = DepletedFuel
			Ratio = 0.0020
			DumpExcess = false
			FlowMode = NO_FLOW
		}
	}
	MODULE
	{
		name = ModuleCoreHeat
		CoreTempGoal = 6000					//Internal temp goal - we don't transfer till we hit this point
		CoreToPartRatio = 0.1				//Scale back cooling if the part is this % of core temp
		CoreTempGoalAdjustment = 0			//Dynamic goal adjustment
		CoreEnergyMultiplier = 0.1			//What percentage of our core energy do we transfer to the part
		HeatRadiantMultiplier = 0.05		//If the core is hotter, how much heat radiates?
		CoolingRadiantMultiplier = 0		//If the core is colder, how much radiates?
		HeatTransferMultiplier = 0			//If the part is hotter, how much heat transfers in?
		CoolantTransferMultiplier = 0.01	//If the part is colder, how much of our energy can we transfer?
		radiatorCoolingFactor = 1			//How much energy we pull from core with an active radiator?  >= 1
		radiatorHeatingFactor = 0.01		//How much energy we push to the active radiator
		MaxCalculationWarp = 1000			//Based on how dramatic the changes are, this is the max rate of change
		CoreShutdownTemp = 8000				//At what core temperature do we shut down all generators on this part?
		MaxCoolant = 45000					//Maximum amount of radiator capacity we can consume - 50 = 1 small
	}
	MODULE
	{
		name = FissionFlowRadiator
		maxEnergyTransfer = 2250000
		overcoolFactor = 0.20
		maxLinksAway = 1
		isCoreRadiator = true		
	}
	MODULE
	{
		name = FissionEngine
		HeatUsed = 45000
		TempIspScale
		{
			key = 300 0
			key = 1000 0.2
			key = 6000 1.0
			key = 7000 1.3
		}	
	}
	RESOURCE
	{
		name = EnrichedUranium
		amount = 160
		maxAmount = 160
	}
	RESOURCE
	{
		name = DepletedFuel
		amount = 0
		maxAmount = 160
	}
	
	MODULE
	{
		name = RadioactiveStorageContainer
		DangerousFuel = DepletedFuel
		SafeFuel = EnrichedUranium
		// What enginer level is needed to transfer the safe fuel
		EngineerLevelForSafe = 1
		// What enginer level is needed to transfer the dangerous fuel
		EngineerLevelForDangerous = 3
		// Max temp for transferring fuel into or out of the part
		MaxTempForTransfer = 400
		// kW of heat per unit of waste
		HeatFluxPerWasteUnit = 5
	}
	@MODULE[ModuleEnginesFX]
	{
		@heatProduction *= 0.1
	}
	
}
@PART[ntr-sc-25-1]:NEEDS[NearFutureElectrical]
{
	@mass -= 1.54
	description = A large nuclear reactor is coupled to an equally large expansion nozzle to heat propellant to comfortably high temperatures. Using a secondary cooling loop, a portion of the reactor's heat runs a small generator that produces around 100 kW of electricity, even when the engine is idle. The Poseidon can also augment its thrust by injecting oxygen into the propellant, creating a tremendous stream of flame and a corresponding boost in thrust. Post-Terran accepts literally no liability for anything related to this part of operation at all.
	!MODULE[ModuleActiveRadiator] {}
	!MODULE[ModuleGenerator] {}
	MODULE
	{
		name = FissionReactor
		StartActionName = Start Reactor
		StopActionName = Deactivate Reactor
		// Show or hide the staging icon
		
		UseStagingIcon = true
		// Force part activate on load
		UseForcedActivation = false

		UseSpecializationBonus = false
		AutoShutdown = true
		DefaultShutoffTemp = 0.90

		// Heat animation, plays when above nominal temp
		// OverheatAnimation = Reactor_1MW_Heat

		// Heat to generate (kW *50)
		HeatGeneration = 800000	
		
		// Above this temp more power output but risky
		NominalTemperature = 3300
		// Above this temp, reactor takes damage
		CriticalTemperature = 3700
		
		MaximumTemperature = 3900

		// Amount of damage taken by core when over critical temp
		// %/s/K, so with value 0.001, at 200 K over CriticalTemp, reactor takes 0.2% damage/s
		CoreDamageRate = 0.01

		// Base lifetime calculations off this resource
		FuelName = EnrichedUranium

		// Heating
		GeneratesHeat = false
		TemperatureModifier
		{
			key = 0 0
		}				
		//250000		

		INPUT_RESOURCE
		{
			ResourceName = EnrichedUranium
			Ratio = 0.0003
			FlowMode = NO_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = DepletedFuel
			Ratio = 0.0003
			DumpExcess = false
			FlowMode = NO_FLOW
		}
	}
	MODULE
	{
		name = ModuleCoreHeat
		CoreTempGoal = 3300					//Internal temp goal - we don't transfer till we hit this point
		CoreToPartRatio = 0.1				//Scale back cooling if the part is this % of core temp
		CoreTempGoalAdjustment = 0			//Dynamic goal adjustment
		CoreEnergyMultiplier = 0.1			//What percentage of our core energy do we transfer to the part
		HeatRadiantMultiplier = 0.05		//If the core is hotter, how much heat radiates?
		CoolingRadiantMultiplier = 0		//If the core is colder, how much radiates?
		HeatTransferMultiplier = 0			//If the part is hotter, how much heat transfers in?
		CoolantTransferMultiplier = 0.01	//If the part is colder, how much of our energy can we transfer?
		radiatorCoolingFactor = 1			//How much energy we pull from core with an active radiator?  >= 1
		radiatorHeatingFactor = 0.01		//How much energy we push to the active radiator
		MaxCalculationWarp = 1000			//Based on how dramatic the changes are, this is the max rate of change
		CoreShutdownTemp = 3900				//At what core temperature do we shut down all generators on this part?
		MaxCoolant = 16000					//Maximum amount of radiator capacity we can consume - 50 = 1 small
	}
	MODULE
	{
		name = FissionFlowRadiator
		passiveCooling = 800
		maxEnergyTransfer = 800000
		overcoolFactor = 0.20
		maxLinksAway = 1
		isCoreRadiator = true		
	}
	MODULE
	{
		name = FissionEngine
		Priority = 2
		HeatUsed = 16000
		TempIspScale
		{
			key = 300 0
			key = 1000 0.2
			key = 3300 1.0
			key = 4000 1.3
		}	
	}
	MODULE
	{
		name = FissionGenerator
		Priority = 1
		PowerGeneration = 100
		HeatUsed = 800
	}
	RESOURCE
	{
		name = EnrichedUranium
		amount = 140
		maxAmount = 140
	}
	RESOURCE
	{
		name = DepletedFuel
		amount = 0
		maxAmount = 140
	}
	MODULE
	{
		name = RadioactiveStorageContainer
		DangerousFuel = DepletedFuel
		SafeFuel = EnrichedUranium
		// What enginer level is needed to transfer the safe fuel
		EngineerLevelForSafe = 1
		// What enginer level is needed to transfer the dangerous fuel
		EngineerLevelForDangerous = 3
		// Max temp for transferring fuel into or out of the part
		MaxTempForTransfer = 400
		// kW of heat per unit of waste
		HeatFluxPerWasteUnit = 5
	}
	@MODULE[ModuleEnginesFX]:HAS[!PROPELLANT[Oxidizer]]   {
		@heatProduction *= 0.1
	}
	@MODULE[ModuleEnginesFX]:HAS[@PROPELLANT[Oxidizer]]   {
		@heatProduction *= 0.1
	}
}
@PART[ntr-sc-125-1]:NEEDS[NearFutureElectrical]
{
	@mass -= 0.60
	description = Improving upon the basic LV-N formula, the Neptune uses excess heat generated by the reactor to run a compact generator system, producing 20 kW of electric power while the engine is running or idle. The engine also features a third mode (hence the name) where oxidizer is injected into the exhaust, causing instantaneous combustion and reportedly violent acceleration.
	!MODULE[ModuleGenerator] {}
	!MODULE[ModuleActiveRadiator] {}
	MODULE
	{
		name = FissionReactor
		StartActionName = Start Reactor
		StopActionName = Deactivate Reactor
		// Show or hide the staging icon
		
		UseStagingIcon = true
		// Force part activate on load
		UseForcedActivation = false

		UseSpecializationBonus = false
		AutoShutdown = true
		DefaultShutoffTemp = 0.90

		// Heat animation, plays when above nominal temp
		// OverheatAnimation = Reactor_1MW_Heat

		// Heat to generate (kW *50)
		HeatGeneration = 65000	
		
		// Above this temp more power output but risky
		NominalTemperature = 3200
		// Above this temp, reactor takes damage
		CriticalTemperature = 3600
		
		MaximumTemperature = 3800

		// Amount of damage taken by core when over critical temp
		// %/s/K, so with value 0.001, at 200 K over CriticalTemp, reactor takes 0.2% damage/s
		CoreDamageRate = 0.01

		// Base lifetime calculations off this resource
		FuelName = EnrichedUranium

		// Heating
		GeneratesHeat = false
		TemperatureModifier
		{
			key = 0 0
		}				
		//250000		

		INPUT_RESOURCE
		{
			ResourceName = EnrichedUranium
			Ratio = 0.0002
			FlowMode = NO_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = DepletedFuel
			Ratio = 0.0002
			DumpExcess = false
			FlowMode = NO_FLOW
		}
	}
	MODULE
	{
		name = ModuleCoreHeat
		CoreTempGoal = 3200					//Internal temp goal - we don't transfer till we hit this point
		CoreToPartRatio = 0.1				//Scale back cooling if the part is this % of core temp
		CoreTempGoalAdjustment = 0			//Dynamic goal adjustment
		CoreEnergyMultiplier = 0.1			//What percentage of our core energy do we transfer to the part
		HeatRadiantMultiplier = 0.05		//If the core is hotter, how much heat radiates?
		CoolingRadiantMultiplier = 0		//If the core is colder, how much radiates?
		HeatTransferMultiplier = 0			//If the part is hotter, how much heat transfers in?
		CoolantTransferMultiplier = 0.01	//If the part is colder, how much of our energy can we transfer?
		radiatorCoolingFactor = 1			//How much energy we pull from core with an active radiator?  >= 1
		radiatorHeatingFactor = 0.01		//How much energy we push to the active radiator
		MaxCalculationWarp = 1000			//Based on how dramatic the changes are, this is the max rate of change
		CoreShutdownTemp = 3800				//At what core temperature do we shut down all generators on this part?
		MaxCoolant = 1300					//Maximum amount of radiator capacity we can consume - 50 = 1 small
	}
	MODULE
	{
		name = FissionFlowRadiator
		passiveCooling = 65
		maxEnergyTransfer = 65000
		overcoolFactor = 0.20
		maxLinksAway = 1
		isCoreRadiator = true		
	}
	MODULE
	{
		name = FissionEngine
		Priority = 2
		HeatUsed = 1300
		TempIspScale
		{
			key = 300 0
			key = 1000 0.2
			key = 3200 1.0
			key = 7000 1.3
		}	
	}
	MODULE
	{
		name = FissionGenerator
		Priority = 1
		PowerGeneration = 20
		HeatUsed = 65
	}
	RESOURCE
	{
		name = EnrichedUranium
		amount = 55
		maxAmount = 55
	}
	RESOURCE
	{
		name = DepletedFuel
		amount = 0
		maxAmount = 55
	}
	MODULE
	{
		name = RadioactiveStorageContainer
		DangerousFuel = DepletedFuel
		SafeFuel = EnrichedUranium
		// What enginer level is needed to transfer the safe fuel
		EngineerLevelForSafe = 1
		// What enginer level is needed to transfer the dangerous fuel
		EngineerLevelForDangerous = 3
		// Max temp for transferring fuel into or out of the part
		MaxTempForTransfer = 400
		// kW of heat per unit of waste
		HeatFluxPerWasteUnit = 5
	}
	@MODULE[ModuleEnginesFX]:HAS[!PROPELLANT[Oxidizer]]   {
		@heatProduction *= 0.1
	}
	@MODULE[ModuleEnginesFX]:HAS[@PROPELLANT[Oxidizer]]   {
		@heatProduction *= 0.1
	}
}
@PART[ntr-sc-125-2]:NEEDS[NearFutureElectrical]
{
	@mass -= 0.49
	
	MODULE
	{
		name = FissionReactor
		StartActionName = Start Reactor
		StopActionName = Deactivate Reactor
		// Show or hide the staging icon
		
		UseStagingIcon = true
		// Force part activate on load
		UseForcedActivation = false

		UseSpecializationBonus = false
		AutoShutdown = true
		DefaultShutoffTemp = 0.90

		// Heat animation, plays when above nominal temp
		// OverheatAnimation = Reactor_1MW_Heat

		// Heat to generate (kW *50)
		HeatGeneration = 100000	
		
		// Above this temp more power output but risky
		NominalTemperature = 3400
		// Above this temp, reactor takes damage
		CriticalTemperature = 3700
		
		MaximumTemperature = 3900

		// Amount of damage taken by core when over critical temp
		// %/s/K, so with value 0.001, at 200 K over CriticalTemp, reactor takes 0.2% damage/s
		CoreDamageRate = 0.01

		// Base lifetime calculations off this resource
		FuelName = EnrichedUranium

		// Heating
		GeneratesHeat = false
		TemperatureModifier
		{
			key = 0 0
		}				
		//250000		

		INPUT_RESOURCE
		{
			ResourceName = EnrichedUranium
			Ratio = 0.0003
			FlowMode = NO_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = DepletedFuel
			Ratio = 0.00030
			DumpExcess = false
			FlowMode = NO_FLOW
		}
	}
	MODULE
	{
		name = ModuleCoreHeat
		CoreTempGoal = 3400					//Internal temp goal - we don't transfer till we hit this point
		CoreToPartRatio = 0.1				//Scale back cooling if the part is this % of core temp
		CoreTempGoalAdjustment = 0			//Dynamic goal adjustment
		CoreEnergyMultiplier = 0.1			//What percentage of our core energy do we transfer to the part
		HeatRadiantMultiplier = 0.05		//If the core is hotter, how much heat radiates?
		CoolingRadiantMultiplier = 0		//If the core is colder, how much radiates?
		HeatTransferMultiplier = 0			//If the part is hotter, how much heat transfers in?
		CoolantTransferMultiplier = 0.01	//If the part is colder, how much of our energy can we transfer?
		radiatorCoolingFactor = 1			//How much energy we pull from core with an active radiator?  >= 1
		radiatorHeatingFactor = 0.01		//How much energy we push to the active radiator
		MaxCalculationWarp = 1000			//Based on how dramatic the changes are, this is the max rate of change
		CoreShutdownTemp = 3900				//At what core temperature do we shut down all generators on this part?
		MaxCoolant = 2000					//Maximum amount of radiator capacity we can consume - 50 = 1 small
	}
	MODULE
	{
		name = FissionFlowRadiator
		maxEnergyTransfer = 100000	
		overcoolFactor = 0.20
		maxLinksAway = 1
		isCoreRadiator = true		
	}
	MODULE
	{
		name = FissionEngine
		HeatUsed = 2000
		TempIspScale
		{
			key = 300 0
			key = 1340 0.2
			key = 3400 1.0
			key = 4000 1.3
		}	
	}
	
	RESOURCE
	{
		name = EnrichedUranium
		amount = 45
		maxAmount = 45
	}
	RESOURCE
	{
		name = DepletedFuel
		amount = 0
		maxAmount = 45
	}
	MODULE
	{
		name = RadioactiveStorageContainer
		DangerousFuel = DepletedFuel
		SafeFuel = EnrichedUranium
		// What enginer level is needed to transfer the safe fuel
		EngineerLevelForSafe = 1
		// What enginer level is needed to transfer the dangerous fuel
		EngineerLevelForDangerous = 3
		// Max temp for transferring fuel into or out of the part
		MaxTempForTransfer = 400
		// kW of heat per unit of waste
		HeatFluxPerWasteUnit = 5
	}
	@MODULE[ModuleEnginesFX]:HAS[!PROPELLANT[Oxidizer]]   {
		@heatProduction *= 0.1
	}
	@MODULE[ModuleEnginesFX]:HAS[@PROPELLANT[Oxidizer]]   {
		@heatProduction *= 0.1
	}
}
@PART[nuclearEngine]:NEEDS[NearFutureElectrical]:AFTER[KerbalAtomics]
{
	@mass -= 0.55
	!MODULE[ModuleAlternator] {}
	MODULE
	{
		name = FissionReactor
		StartActionName = Start Reactor
		StopActionName = Deactivate Reactor
		// Show or hide the staging icon
		
		UseStagingIcon = true
		// Force part activate on load
		UseForcedActivation = false

		UseSpecializationBonus = false
		AutoShutdown = true
		DefaultShutoffTemp = 0.90

		// Heat animation, plays when above nominal temp
		// OverheatAnimation = Reactor_1MW_Heat

		// Heat to generate (kW *50)
		HeatGeneration = 55000	
		
		// Above this temp more power output but risky
		NominalTemperature = 3000
		// Above this temp, reactor takes damage
		CriticalTemperature = 3400
		
		MaximumTemperature = 3800

		// Amount of damage taken by core when over critical temp
		// %/s/K, so with value 0.001, at 200 K over CriticalTemp, reactor takes 0.2% damage/s
		CoreDamageRate = 0.01

		// Base lifetime calculations off this resource
		FuelName = EnrichedUranium

		// Heating
		GeneratesHeat = false
		TemperatureModifier
		{
			key = 0 0
		}				
		//250000		

		INPUT_RESOURCE
		{
			ResourceName = EnrichedUranium
			Ratio = 0.0027
			FlowMode = NO_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = DepletedFuel
			Ratio = 0.00027
			DumpExcess = false
			FlowMode = NO_FLOW
		}
	}
	MODULE
	{
		name = ModuleCoreHeat
		CoreTempGoal = 3000					//Internal temp goal - we don't transfer till we hit this point
		CoreToPartRatio = 0.1				//Scale back cooling if the part is this % of core temp
		CoreTempGoalAdjustment = 0			//Dynamic goal adjustment
		CoreEnergyMultiplier = 0.1			//What percentage of our core energy do we transfer to the part
		HeatRadiantMultiplier = 0.05		//If the core is hotter, how much heat radiates?
		CoolingRadiantMultiplier = 0		//If the core is colder, how much radiates?
		HeatTransferMultiplier = 0			//If the part is hotter, how much heat transfers in?
		CoolantTransferMultiplier = 0.01	//If the part is colder, how much of our energy can we transfer?
		radiatorCoolingFactor = 1			//How much energy we pull from core with an active radiator?  >= 1
		radiatorHeatingFactor = 0.01		//How much energy we push to the active radiator
		MaxCalculationWarp = 1000			//Based on how dramatic the changes are, this is the max rate of change
		CoreShutdownTemp = 3800				//At what core temperature do we shut down all generators on this part?
		MaxCoolant = 1100					//Maximum amount of radiator capacity we can consume - 50 = 1 small
	}
	MODULE
	{
		name = FissionFlowRadiator
		maxEnergyTransfer = 55000
		overcoolFactor = 0.20
		maxLinksAway = 1
		isCoreRadiator = true
	}
	RESOURCE
	{
		name = EnrichedUranium
		amount = 50
		maxAmount = 50
	}
	RESOURCE
	{
		name = DepletedFuel
		amount = 0
		maxAmount = 50
	}
	MODULE
	{
		name = FissionEngine
		HeatUsed = 1100
		TempIspScale
		{
			key = 300 0
			key = 1000 0.2
			key = 3000 1.0
			key = 4000 1.3
		}	
	}
	MODULE
	{
		name = RadioactiveStorageContainer
		DangerousFuel = DepletedFuel
		SafeFuel = EnrichedUranium
		// What enginer level is needed to transfer the safe fuel
		EngineerLevelForSafe = 1
		// What enginer level is needed to transfer the dangerous fuel
		EngineerLevelForDangerous = 3
		// Max temp for transferring fuel into or out of the part
		MaxTempForTransfer = 400
		// kW of heat per unit of waste
		HeatFluxPerWasteUnit = 5
	}
	@MODULE[ModuleEnginesFX] {
		@heatProduction *= 0.1
	}
}